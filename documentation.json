{
    "pipes": [],
    "interfaces": [
        {
            "name": "DB",
            "id": "interface-DB-11f75834c36f13b8db7ed8fbd660edb5c0b8bc42b2f245bd795d8d47071030ae36238b4ef816f95c41d519a245d7de328a7293465d469b8a72172ada97de04f8",
            "file": "src/app/Data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DB {\n    id: number;\n    name: string;\n    description: string;\n    image: string;\n    season: string;\n    vibes: string;\n    active: boolean;\n    period: Date;\n    season_starts: Date;\n    season_ends: Date;\n}",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "period",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "season",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "season_ends",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "season_starts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "vibes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppComponent",
            "id": "injectable-AppComponent-b7ea204c7494fdba48ba2ce785e9d8b1f85f68d7cfc38eeae6eaee1a5f731239827bd4fe22b6187a0b7dad45750cf802aa6037ead4f6ed33715e14cfcfa5504a",
            "file": "src/app/app.component.ts",
            "properties": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<CourseCardComponent>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "CourseCardComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methods": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBookingPlaceSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "DB",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DB",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFetchCountires",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, Injectable, OnChanges, OnInit, QueryList, SimpleChanges, ViewChild, ViewChildren } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { BeigeComponent } from \"./beige/beige.component\";\nimport { CourseCardComponent } from './course-card/course-card.component';\nimport { db } from \"./db\";\nimport { DB } from './Data';\nimport { CommonModule } from '@angular/common';\nimport { SupabaseService } from './supabase-componenet';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, BeigeComponent, CourseCardComponent, CommonModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n@Injectable({providedIn: 'root'})\nexport class AppComponent implements AfterViewInit, OnChanges, OnInit{\n\n  // @ViewChild('card', {read: ElementRef})\n  // card: CourseCardComponent = new CourseCardComponent;\n  @ViewChildren(CourseCardComponent)\n  card?: QueryList<CourseCardComponent>;\n\n  data = db;\n\n  count: number =0\n\n  ngAfterViewInit(){\n    this.card?.changes.subscribe(\n      (card: QueryList<CourseCardComponent>) => {\n        console.log(\"here is the new item \", card.last)\n      }\n    )\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(`This is the changes`)\n  }\n  ngOnInit(): void {\n    console.log(`This is the OnInit`)\n  }\n\n  onBookingPlaceSelected(event: DB){\n    console.log(\"Booking place: \", this.card);\n    this.data.push(\n      {\n        \"id\": 6,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : false,\n        \"period\": new Date(2025,2,20),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    }\n    )\n  }\n\n// Create a single supabase client for interacting with your database\n\nonFetchCountires(){\n    \n  this.supabaseService.client().then((response) => {\n    console.log(\"res \", response)\n  }).catch((error) => {\n    console.log(\"err \", error)\n  }) \n  }\n  constructor(private supabaseService: SupabaseService) {}\n\n\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "supabaseService",
                        "type": "SupabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 70,
                "jsdoctags": [
                    {
                        "name": "supabaseService",
                        "type": "SupabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupabaseService",
            "id": "injectable-SupabaseService-959fcbad51e492219988ad3b3ff37a72954bfb5b35cf0dbc9874654c39bf264e1516ce15281ffe6f47334d84b1bd9cd7776aa05eaae74940f6502700ce3c2ded",
            "file": "src/app/supabase-componenet.ts",
            "properties": [
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "client",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, provideExperimentalZonelessChangeDetection } from '@angular/core';\nimport {\n  createClient,\n  SupabaseClient,\n} from '@supabase/supabase-js'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient\n\n  constructor() {\n    this.supabase = createClient('http://localhost:8000', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE')\n  }\n\n  async client() {\n    try {\n      const { data, error } = await this.supabase\n        .from('no_places')\n        .select('*');\n\n      if (error) {\n        throw error;\n      }\n\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b7ea204c7494fdba48ba2ce785e9d8b1f85f68d7cfc38eeae6eaee1a5f731239827bd4fe22b6187a0b7dad45750cf802aa6037ead4f6ed33715e14cfcfa5504a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<CourseCardComponent>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "CourseCardComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "data",
                    "defaultValue": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBookingPlaceSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "DB",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DB",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFetchCountires",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "BeigeComponent",
                    "type": "component"
                },
                {
                    "name": "CourseCardComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, Injectable, OnChanges, OnInit, QueryList, SimpleChanges, ViewChild, ViewChildren } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { BeigeComponent } from \"./beige/beige.component\";\nimport { CourseCardComponent } from './course-card/course-card.component';\nimport { db } from \"./db\";\nimport { DB } from './Data';\nimport { CommonModule } from '@angular/common';\nimport { SupabaseService } from './supabase-componenet';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, BeigeComponent, CourseCardComponent, CommonModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n@Injectable({providedIn: 'root'})\nexport class AppComponent implements AfterViewInit, OnChanges, OnInit{\n\n  // @ViewChild('card', {read: ElementRef})\n  // card: CourseCardComponent = new CourseCardComponent;\n  @ViewChildren(CourseCardComponent)\n  card?: QueryList<CourseCardComponent>;\n\n  data = db;\n\n  count: number =0\n\n  ngAfterViewInit(){\n    this.card?.changes.subscribe(\n      (card: QueryList<CourseCardComponent>) => {\n        console.log(\"here is the new item \", card.last)\n      }\n    )\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(`This is the changes`)\n  }\n  ngOnInit(): void {\n    console.log(`This is the OnInit`)\n  }\n\n  onBookingPlaceSelected(event: DB){\n    console.log(\"Booking place: \", this.card);\n    this.data.push(\n      {\n        \"id\": 6,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : false,\n        \"period\": new Date(2025,2,20),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    }\n    )\n  }\n\n// Create a single supabase client for interacting with your database\n\nonFetchCountires(){\n    \n  this.supabaseService.client().then((response) => {\n    console.log(\"res \", response)\n  }).catch((error) => {\n    console.log(\"err \", error)\n  }) \n  }\n  constructor(private supabaseService: SupabaseService) {}\n\n\n}\n\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "supabaseService",
                        "type": "SupabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 70,
                "jsdoctags": [
                    {
                        "name": "supabaseService",
                        "type": "SupabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div class=\"justify-items-center\">\n  <h1 class=\"text-blue-600/100 dark:text-sky-400/100\">Welcome to Jubilee</h1>\n</div>\n<div\n  class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 sm:gap-4 max-w-7xl mx-auto px-1 py-6\"\n>\n  @for (item of data; track $index; let inde = $index; let count = $count) {\n  <div class=\"w-full min-w-0 flex flex-col\">\n    <app-course-card\n      (bookPlace)=\"onBookingPlaceSelected($event)\"\n      [index]=\"inde\"\n      [place]=\"item\"\n      #card\n    ></app-course-card>\n  </div>\n  } @empty{\n  <div\n    class=\"relative min-h-60 w-full flex flex-col justify-center items-center my-6 bg-white shadow-sm border border-slate-200 rounded-lg p-2\"\n  >\n    <div class=\"p-3 text-center\">\n      <div class=\"flex justify-center mb-4\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"currentColor\"\n          class=\"text-slate-400 w-10 h-10\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125\"\n          />\n        </svg>\n      </div>\n      <div class=\"flex justify-center mb-2\">\n        <h5 class=\"text-slate-800 text-2xl font-semibold\">No data found.</h5>\n      </div>\n      <p class=\"block text-slate-600 leading-normal font-light mb-4 max-w-lg\">\n        Contact support for more details.\n      </p>\n    </div>\n  </div>\n  }\n</div>\n\n<button (click)=\"onFetchCountires()\">Click</button>\n\n<!-- <app-course-card\n    *ngFor=\"let item of data; index as inde; count as count\"\n    (bookPlace)=\"onBookingPlaceSelected($event)\"\n    [index]=\"inde\"\n    [place]=\"item\"\n  ></app-course-card> -->\n\n<!-- <app-beige></app-beige> -->\n"
        },
        {
            "name": "BeigeComponent",
            "id": "component-BeigeComponent-e1809a3291c772f1c74b7c81f08740c40d388842b685fd37ccedb7339411ed0cb42749cf9d535150373b638ed7a0e3830167bede5b056e11b56351173d50ca0a",
            "file": "src/app/beige/beige.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-beige",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./beige.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-beige',\n  imports: [],\n  templateUrl: './beige.component.html',\n  styleUrl: './beige.component.css'\n})\nexport class BeigeComponent {\n\n}\n",
            "styleUrl": "./beige.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header>\n  <div class=\"header-content\">\n    <div class=\"logo\"><img src=\"assets/notes.svg\" /></div>\n    <nav>\n      <ul>\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">About</a></li>\n        <li><a href=\"#\">Services</a></li>\n        <li><a href=\"#\">Contact</a></li>\n      </ul>\n    </nav>\n  </div>\n</header>\n\n<main>\n  <h1>Welcome to My Website</h1>\n  <p>\n    This is a responsive layout with a header, body, and footer. It adapts to\n    different screen sizes seamlessly.\n  </p>\n  <p>Add your content here...</p>\n</main>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CourseCardComponent",
            "id": "component-CourseCardComponent-b9aec0c89fde64b5d55b6486ebf377f005b5a0ea41837f4bf01e619d4afaffad7b97b8ff7a7fda04127b1881bde51069dec9c854fa195d5c18f397f68f971449",
            "file": "src/app/course-card/course-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-course-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./course-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "index",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "place",
                    "defaultValue": "{\n    id: 0,\n    name: '',\n    description: '',\n    image: '',\n    season: '',\n    vibes: '',\n    active: false,\n    period: new Date(),\n    season_starts: new Date(),\n    season_ends: new Date()\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 17,
                    "type": "DB",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "bookPlace",
                    "defaultValue": "new EventEmitter<DB>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isActiveStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "{ opacity: string; }",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isImageVisible",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPlacing",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {DB} from \"../Data\";\nimport { log } from 'console';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-course-card',\n  imports: [CommonModule],\n  templateUrl: './course-card.component.html',\n  styleUrl: './course-card.component.css'\n})\nexport class CourseCardComponent {\n\n  @Input({\n    required: true\n  })\n  place: DB = {\n    id: 0,\n    name: '',\n    description: '',\n    image: '',\n    season: '',\n    vibes: '',\n    active: false,\n    period: new Date(),\n    season_starts: new Date(),\n    season_ends: new Date()\n  }\n\n  @Input()\n  index: number = 0;\n  \n\n  @Output()\n  bookPlace = new EventEmitter<DB>();\n\n  onPlacing(){\n    this.bookPlace.emit(this.place);\n    console.log(\"Placing: \", this.place.name);\n  }\n\n  isImageVisible(): boolean{\n    return this.place.image !== ''\n  }\n\n  getStyles(){\n    return ['card']\n    // return {\n    //   'card' : true\n    // }\n  }\n\n  isActiveStyle(){\n    if(this.place.active){\n      return {\n      'opacity': '100%'\n      }\n    }else \n    return {\n      'opacity': '75%'\n    }\n  }\n\n  get isActiveCard(): boolean {\n    return this.place.active !== false; // Default to true if undefined\n  }\n\n}\n",
            "styleUrl": "./course-card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "isActiveCard": {
                    "name": "isActiveCard",
                    "getSignature": {
                        "name": "isActiveCard",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 64
                    }
                }
            },
            "templateData": "<!-- <div\n  class=\"relative flex flex-col my-6 bg-white shadow-sm border border-slate-200 rounded-lg w-96\"\n>\n  <div class=\"p-4\">\n    <h6 class=\"mb-2 text-slate-800 text-xl font-semibold\">\n      Location: {{ place.name }}, <small>Season: {{ place.season }}</small>\n    </h6>\n    <p class=\"text-slate-600 leading-normal font-light\">\n      {{ place.description }}\n    </p>\n    <em>Vibes: </em><i>{{ place.vibes }}</i>\n  </div>\n  <div class=\"relative h-56 m-2.5 overflow-hidden text-white rounded-md\">\n    <img [src]=\"place.image\" alt=\"card-image\" />\n  </div>\n</div> -->\n\n<div\n  class=\"w-full h-full bg-white shadow-sm border border-slate-200 rounded-lg\"\n  [ngClass]=\"getStyles()\"\n  [ngStyle]=\"isActiveStyle()\"\n>\n  <div class=\"w-full h-full bg-white rounded-lg\">\n    <!-- Inactive Banner -->\n\n    <div class=\"relative p-2.5 h-96 overflow-hidden rounded-xl bg-clip-border\">\n      <img\n        [src]=\"place.image\"\n        alt=\"card-image\"\n        *ngIf=\"isImageVisible(); else noImage\"\n        class=\"h-full w-full object-cover rounded-md\"\n      />\n      <ng-template #noImage>\n        <div\n          class=\"w-full h-full flex flex-col items-center justify-center bg-gray-100 rounded-lg border border-gray-200\"\n        >\n          <svg\n            class=\"w-16 h-16 text-gray-400 mb-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n            />\n          </svg>\n          <h3 class=\"text-xl font-semibold text-gray-700\">Image Not Found</h3>\n          <p class=\"text-gray-500 text-sm\">\n            The requested image could not be loaded\n          </p>\n        </div>\n      </ng-template>\n    </div>\n\n    <div class=\"p-4\">\n      <div class=\"mb-2 flex items-center justify-between\">\n        <p class=\"text-slate-800 text-xl font-semibold\">\n          {{ index + 1 }}. {{ place.name }}\n        </p>\n        <p class=\"text-cyan-600 text-xl font-semibold\">$95.00</p>\n      </div>\n\n      <!-- Season Chip with SVG -->\n      <div class=\"flex flex-wrap gap-2 mb-2\" [ngSwitch]=\"place.season\">\n        <span\n          class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800\"\n          *ngSwitchCase=\"'Spring'\"\n        >\n          <img\n            src=\"assets/spring.svg\"\n            fill=\"currentColor\"\n            alt=\"Spring logo\"\n            class=\"w-4 h-4 mr-1\"\n          />\n          {{ place.season }}\n        </span>\n        <span\n          class=\"relative inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-orange-100 text-orange-800 overflow-hidden\"\n          *ngSwitchCase=\"'Autumn'\"\n        >\n          <img\n            src=\"assets/autumn.svg\"\n            fill=\"currentColor\"\n            alt=\"Autumn logo\"\n            class=\"w-4 h-4 mr-1\"\n          />\n          {{ place.season }}\n\n          <!-- Falling leaves -->\n          <div class=\"absolute inset-0 pointer-events-none\">\n            <div class=\"animate-leaf-fall absolute top-0 left-1/3 text-xs\">\n              🍂\n            </div>\n            <div\n              class=\"animate-leaf-fall delay-300 absolute top-0 left-2/3 text-sm\"\n            >\n              🍁\n            </div>\n          </div>\n        </span>\n\n        <span\n          class=\"relative inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800 overflow-hidden z-10\"\n          *ngSwitchCase=\"'Summer'\"\n        >\n          <img\n            src=\"assets/summer.svg\"\n            alt=\"Summer logo\"\n            class=\"w-4 h-4 mr-1 z-20\"\n          />\n          {{ place.season }}\n\n          <!-- 🔥 Blazing Flames Layer -->\n        </span>\n\n        <span\n          class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\"\n          *ngSwitchCase=\"'Winter'\"\n        >\n          <img\n            src=\"assets/winter.svg\"\n            fill=\"currentColor\"\n            alt=\"Spring logo\"\n            class=\"w-4 h-4 mr-1\"\n          />\n          {{ place.season }}\n        </span>\n        <span class=\"flex items-center text-xs gap-1 text-gray-500\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"h-3 w-3\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M8 7V3m8 4V3m-9 4h10M5 11h14M5 15h14M5 19h14\"\n            />\n          </svg>\n          {{ place.season_starts | date : \"longDate\" }} -\n          {{ place.season_ends | date : \"longDate\" }}\n        </span>\n      </div>\n\n      <p class=\"text-slate-600 leading-normal font-light\">\n        {{ place.description }}\n      </p>\n      <em>Vibes: </em><i>{{ place.vibes }}</i>\n      <button\n        class=\"rounded-md w-full mt-6 bg-cyan-600 py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md hover:shadow-lg focus:bg-cyan-700 focus:shadow-none active:bg-cyan-700 hover:bg-cyan-700 active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\n        type=\"button\"\n        (click)=\"onPlacing()\"\n      >\n        Book Now\n      </button>\n    </div>\n  </div>\n\n  <!-- <div class=\"flex flex-wrap gap-2 mb-2\"> -->\n  <!-- @switch (place.season) { -->\n  <!-- Spring -->\n  <!-- @case ('Spring') {\n    <span\n      class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800\"\n    >\n      <img\n        src=\"assets/spring.svg\"\n        fill=\"currentColor\"\n        alt=\"Spring logo\"\n        class=\"w-4 h-4 mr-1\"\n      />\n      {{ place.season }}\n    </span>\n    } -->\n  <!-- Summer -->\n  <!-- @case ('Summer') {\n    <span\n      class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800\"\n    >\n      <img src=\"assets/summer.svg\" alt=\"Spring logo\" class=\"w-4 h-4 mr-1\" />\n      {{ place.season }}\n    </span>\n    } -->\n  <!-- Autumn -->\n  <!-- @case ('Autumn') {\n    <span\n      class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-orange-100 text-orange-800\"\n    >\n      <img src=\"assets/autumn.svg\" alt=\"Spring logo\" class=\"w-4 h-4 mr-1\" />\n      {{ place.season }}\n    </span>\n    } -->\n  <!-- Winter -->\n  <!-- @case ('Winter') {\n    <span\n      class=\"inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800\"\n    >\n      <img src=\"assets/winter.svg\" alt=\"Spring logo\" class=\"w-4 h-4 mr-1\" />\n      {{ place.season }}\n    </span>\n    }  -->\n  <!-- } -->\n  <!-- </div> -->\n\n  <!-- <div class=\"relative p-2.5 h-96 overflow-hidden rounded-xl bg-clip-border\">\n    @if (place.image) {\n    <img\n      [src]=\"place.image\"\n      alt=\"card-image\"\n      class=\"h-full w-full object-cover rounded-md\"\n    />\n    } @else {\n    <div\n      class=\"w-full h-full flex flex-col items-center justify-center bg-gray-100 rounded-lg border border-gray-200\"\n    >\n      <svg\n        class=\"w-16 h-16 text-gray-400 mb-4\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n        />\n      </svg>\n      <h3 class=\"text-xl font-semibold text-gray-700\">Image Not Found</h3>\n      <p class=\"text-gray-500 text-sm\">\n        The requested image could not be loaded\n      </p>\n    </div>\n    }\n  </div> -->\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    //provideZoneChangeDetection({ eventCoalescing: true }), \n    provideExperimentalZonelessChangeDetection(),\n    provideRouter(routes), provideClientHydration(withEventReplay()),\n      provideHttpClient()\n  ]\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "resolve(serverDistFolder, '../browser')"
            },
            {
                "name": "commonEngine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new CommonEngine()"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "db",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/db.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DB[]",
                "defaultValue": "[\n    // Need a list of Data objects that represents the best places to visit in every season in the japan\n    {\n        \"id\": 1,\n        \"name\": \"Tokyo\",\n        \"season\": \"Spring\",\n        \"description\": \"Tokyo is famous for its cherry blossoms in spring. The city is filled with beautiful parks and gardens where you can enjoy the stunning pink flowers.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2017/04/15/11/51/mt-fuji-2232246_1280.jpg\",\n        \"vibes\": \"Peaceful, Blossoming\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,2,20),\n        \"season_ends\" : new Date(2025,5,21)\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Kyoto\",\n        \"season\": \"Autumn\",\n        \"description\": \"Kyoto is known for its stunning autumn foliage. The city's temples and gardens are adorned with vibrant red and orange leaves during this season.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2014/10/07/13/48/mountain-477832_1280.jpg\",\n        \"vibes\": \"Serene, Vibrant\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,8,22),\n        \"season_ends\" : new Date(2025,11,21)\n\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Okinawa\",\n        \"season\": \"Summer\",\n        \"description\": \"Okinawa is a tropical paradise with beautiful beaches and warm weather. It's the perfect destination for summer vacations.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2019/10/02/16/56/landscape-4521413_1280.jpg\",\n        \"vibes\": \"Relaxing, Tropical\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,5,21),\n        \"season_ends\" : new Date(2025,8,22)\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : false,\n        \"period\": new Date(2025,2,20),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    }\n]"
            },
            {
                "name": "indexHtml",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "join(serverDistFolder, 'index.server.html')"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering(),\n  ]\n}"
            },
            {
                "name": "serverDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "dirname(fileURLToPath(import.meta.url))"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "resolve(serverDistFolder, '../browser')"
                },
                {
                    "name": "commonEngine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new CommonEngine()"
                },
                {
                    "name": "indexHtml",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "join(serverDistFolder, 'index.server.html')"
                },
                {
                    "name": "serverDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "dirname(fileURLToPath(import.meta.url))"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    //provideZoneChangeDetection({ eventCoalescing: true }), \n    provideExperimentalZonelessChangeDetection(),\n    provideRouter(routes), provideClientHydration(withEventReplay()),\n      provideHttpClient()\n  ]\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering(),\n  ]\n}"
                }
            ],
            "src/app/db.ts": [
                {
                    "name": "db",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/db.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DB[]",
                    "defaultValue": "[\n    // Need a list of Data objects that represents the best places to visit in every season in the japan\n    {\n        \"id\": 1,\n        \"name\": \"Tokyo\",\n        \"season\": \"Spring\",\n        \"description\": \"Tokyo is famous for its cherry blossoms in spring. The city is filled with beautiful parks and gardens where you can enjoy the stunning pink flowers.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2017/04/15/11/51/mt-fuji-2232246_1280.jpg\",\n        \"vibes\": \"Peaceful, Blossoming\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,2,20),\n        \"season_ends\" : new Date(2025,5,21)\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Kyoto\",\n        \"season\": \"Autumn\",\n        \"description\": \"Kyoto is known for its stunning autumn foliage. The city's temples and gardens are adorned with vibrant red and orange leaves during this season.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2014/10/07/13/48/mountain-477832_1280.jpg\",\n        \"vibes\": \"Serene, Vibrant\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,8,22),\n        \"season_ends\" : new Date(2025,11,21)\n\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Okinawa\",\n        \"season\": \"Summer\",\n        \"description\": \"Okinawa is a tropical paradise with beautiful beaches and warm weather. It's the perfect destination for summer vacations.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2019/10/02/16/56/landscape-4521413_1280.jpg\",\n        \"vibes\": \"Relaxing, Tropical\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,5,21),\n        \"season_ends\" : new Date(2025,8,22)\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : true,\n        \"period\": new Date(),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Hokkaido\",\n        \"season\": \"Winter\",\n        \"description\": \"Hokkaido is famous for its winter sports and stunning snow-covered landscapes. It's a great place for skiing and snowboarding.\",\n        \"image\": \"https://cdn.pixabay.com/photo/2022/04/04/02/52/cherry-blossoms-7110279_1280.jpg\",\n        \"vibes\": \"Chilly, Adventurous\",\n        \"active\" : false,\n        \"period\": new Date(2025,2,20),\n        \"season_starts\" : new Date(2025,11,22),\n        \"season_ends\" : new Date(2025,2,20)\n\n    }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DB",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/beige/beige.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BeigeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/course-card/course-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CourseCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/db.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "db",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/supabase-componenet.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commonEngine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "indexHtml",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}